#include <iostream>
#include <string.h>
#include <cctype>

using namespace std;
     
   string Cifrado_vigenere(const string Mensaje_ordinario= "", string Llave= "");
   string Descifrado_vigenere(const string Mensaje_encriptado= "", string Llave= "");
   void convertirAMayusculas(string& Mensaje, string& Clave);
    
   int main() {

    string Mensaje="", Clave="";
    int OpcionPrincipal = 0;

     do
  {
        system("cls");
        cout<<"1 para Encriptar un mensaje.\n";
        cout<<"2 para Desencriptar un mensaje.\n";
        cout<<"Ingrese su opción: ";
        cin >> OpcionPrincipal;
    

        switch (OpcionPrincipal) {
        case 1:
            cout<<"Por favor,ingrese el mensaje que desea encriptar en letras mayúsculas : ";
            getline(cin>>ws,Mensaje);
            fflush(stdin);

            cout<<"A continuación, ingresa la palabra clave: ";
            getline(cin>>ws,Clave);
            fflush(stdin);
             
            convertirAMayusculas(Mensaje,Clave);
                
            cout<<"El mensaje encriptado es: "<<Cifrado_vigenere(Mensaje,Clave)<<endl;
            system("PAUSE");
            break;
        case 2:
            cout<<"Por favor,ingrese el mensaje que desea desencriptar en letras mayúsculas : ";
            getline(cin>>ws,Mensaje);
            fflush(stdin);

            cout<<"A continuación, ingresa la clave en letras mayúsculas: ";
            getline(cin>>ws,Clave);
            fflush(stdin);
           
            convertirAMayusculas(Mensaje,Clave);
             
            cout<<"El mensaje desencriptado es: "<<Descifrado_vigenere(Mensaje,Clave)<<endl;
            system("PAUSE");
            break;
            
            default:
             cout << "Opción inválida. Intente de nuevo." <<endl;                          
         return 0;
    }
  } while (OpcionPrincipal <=2);
}

    string Cifrado_vigenere( string Mensaje_ordinario, string Llave){  
    string Mensaje_resultante= "";
    string Suma_posiciones= "";
    string pos = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int fix=0;
    int Caracteres =0;
     
     Caracteres = Mensaje_ordinario.length()-1;
         
         for (int i = 0; i <= Caracteres; i++){
    
    if (Mensaje_ordinario[i] == ' '){
       
        Mensaje_resultante.append(1,' ');
        
        fix = fix + 1;

        Suma_posiciones.append(1,' ');
    }
    else{
        Mensaje_resultante.append(1,Llave[(i-fix)%Llave.length()]);

        Suma_posiciones.append(1, pos[((Mensaje_ordinario[i]-65)-(Mensaje_resultante[(i-fix) % Llave.length()]-65))%26]);
    }
  } 
   return Suma_posiciones;   
 }

    string Descifrado_vigenere( string Mensaje_encriptado, string Llave){  
    string Mensaje_resultante= "";
    string Resta_posiciones= "";
    string pos = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int fix=0;
    int Caracteres =0;

    Caracteres= Mensaje_encriptado.length()-1;
         
         for (int i = 0; i <=Caracteres; i++){
    
    if (Mensaje_encriptado[i] == ' '){
       
        Mensaje_resultante.append(1,' ');
        
        fix = fix+1;

        Resta_posiciones.append(1,' ');
    }
    else{
        Mensaje_resultante.append(1,Llave[(i-fix)%Llave.length()]);
    
        Resta_posiciones.append(1, pos[((Mensaje_encriptado[i]-65)-(Mensaje_resultante[(i-fix) % Llave.length()]-65))%26]-26);
    }  
   }
    return Resta_posiciones; 
   }

   void convertirAMayusculas(string& Mensaje, string& Clave){
     for (char& c: Mensaje)
    {
        c= toupper (c);
    }

     for (char& c: Clave)
    {
        c= toupper (c);
    }
 } 